
                            The receipts are stored locally, not in the blocks.

                            They are exchanged via Eth/69 and JSON-RPC.

---------------------------------------------- Frontier ----------------------------------

RLP([
  postStateRoot,            // 32-byte Keccak hash of state trie after this transaction
  cumulativeGasUsed,        // integer
  logsBloom,                // 256 bytes
  logs: [log₁, log₂, ...]   // array of log entries
])

logₙ = [
    address: B_20,                          // 20-byte contract address that emitted the log
    topics: [topic₁: B, topic₂: B, ...],    // array of 32-byte topics
    data: B                                 // arbitrary byte array
]

--------------------------------------------- Byzantium ----------------------------------

RLP([
  status,                   // 0x01 or 0x00  — EIP-658 (post-Byzantium)
  cumulativeGasUsed,        // integer
  logsBloom,                // 256 bytes
  logs: [log₁, log₂, ...]   // array of log entries
])

--------------------------------------------- EIP-2930 ----------------------------------

0x01 || RLP([
  status,                   // 0x01 or 0x00  — EIP-658 (post-Byzantium)
  cumulativeGasUsed,        // integer
  logsBloom,                // 256 bytes
  logs: [log₁, log₂, ...]   // array of log entries
])

------------------------------------------ EIP-1559 (default) ---------------------------

0x02 || RLP([
  status,                   // 0x01 or 0x00  — EIP-658 (post-Byzantium)
  cumulativeGasUsed,        // integer
  logsBloom,                // 256 bytes
  logs: [log₁, log₂, ...]   // array of log entries
])

------------------------------------- Blob transactions receipt -------------------------

0x03 || RLP([
  status,                   // 0x01 or 0x00  — EIP-658 (post-Byzantium)
  cumulativeGasUsed,        // integer
  logsBloom,                // 256 bytes
  logs: [log₁, log₂, ...],  // array of log entries
  blobGasUsed,              // integer = Total gas used by blob data in this transaction
  blobGasPrice              // integer = Price per blob gas unit (used in fee calculation)
])

------------------------------------ Smart EOA delegation receipt -----------------------

0x04 || RLP([
  status                    // 0x01 or 0x00  — EIP-658 (post-Byzantium)
  cumulativeGasUsed,        // integer
  logsBloom,                // 256 bytes
  logs: [log₁, log₂, ...],  // array of log entries
  delegationTarget          // 20-byte bytes = Address of the contract executed on behalf of the EOA
])
